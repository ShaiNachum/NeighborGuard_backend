{
    "schemes": [],
    "swagger": "2.0",
    "info": {
        "description": "This is the NeighborGuard API documentation.",
        "title": "NeighborGuard API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/users": {
            "get": {
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SearchUsersResponseSchema"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User object that needs to be created",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.NewUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schemas.SearchUsersResponseSchema": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.User"
                    }
                }
            }
        },
        "services.Address": {
            "type": "object",
            "properties": {
                "apartmentNumber": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "houseNumber": {
                    "type": "integer"
                },
                "street": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "integer"
                }
            }
        },
        "services.LonLat": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "services.NewUser": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/services.Address"
                },
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastName": {
                    "type": "string"
                },
                "lonLat": {
                    "$ref": "#/definitions/services.LonLat"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "services.User": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/services.Address"
                },
                "age": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "lastName": {
                    "type": "string"
                },
                "lonLat": {
                    "$ref": "#/definitions/services.LonLat"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}